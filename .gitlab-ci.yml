image: jhipster/jhipster:v7.0.1

variables:
  GIT_DEPTH: 10

stages:
  - build
  - analyze
  - package
  - release
  - deploy
before_script:
  - export NG_CLI_ANALYTICS="false"
  - export MAVEN_USER_HOME=`pwd`/.maven
  - export TAG=$CI_COMMIT_BRANCH && [[ "$CI_COMMIT_BRANCH" == "master" ]] && TAG="prod"

maven-compile:
  stage: build
  script:
    - ./mvnw -ntp compile -P-webpack -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/classes/
      - target/generated-sources/
    expire_in: 1 day
  only:
    - master
    - merge_requests
    - staging

maven-package:
  stage: package
  script:
    - ./mvnw -ntp verify -Pprod -DskipTests -Dmaven.repo.local=$MAVEN_USER_HOME
  artifacts:
    paths:
      - target/*.jar
      - target/classes
    expire_in: 1 day
  only:
    - master
    - staging

docker-push:
  stage: release
  variables:
    REGISTRY_URL: $CI_REGISTRY
  dependencies:
    - maven-package
  script:
    - export IMAGE_TAG=$CI_REGISTRY_IMAGE:$TAG
    - ./mvnw -ntp jib:build -Pprod -Djib.to.image=$IMAGE_TAG -Djib.to.auth.username=gitlab-ci-token  -Djib.to.auth.password=$CI_BUILD_TOKEN -Dmaven.repo.local=$MAVEN_USER_HOME
  only:
    - master
    - staging

docker-trigger-staging:
  stage: deploy
  variables:
    ENVIRONMENT: staging
    SERVICE: backoffice
  trigger:
    project: application-consultants-globale/app-infra
    branch: staging
  only:
    - staging

docker-trigger-master:
  stage: deploy
  variables:
    ENVIRONMENT: master
    SERVICE: backoffice
  trigger:
    project: application-consultants-globale/app-infra
    branch: master
  only:
    - master
